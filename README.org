
#+AUTHOR: Lucas Martins Soares
#+OPTIONS: toc:t


** Índice                                                              :toc:
  - [[#link-do-repositório][Link do Repositório]]
  - [[#como-executar][Como executar]]
  - [[#como-funciona][Como funciona]]
  - [[#arquivos-de-testes][Arquivos de testes]]

** Link do Repositório
[[https://github.com/lucasmsoares96/Compilador]]

** Como executar
Nesse repositório se encontra os binários pre-compilados para linux (sem extensão) e para windows (.exe) na arquitetura x86. Para executar o binário pre-compilado, basta digitar o seguinte comando:

- Linux
#+begin_src bash
cd build
./Compilador Código_01.c
#+end_src

- Windows
#+begin_src bash
cd build
"Compilador.exe" Código_01.c
#+end_src

Caso deseje executar o programa em outra arquitetura, será necessário recompilar o código. Para isso é preciso ter um ambinete haskell instalado e configurado nas suas maquina. A forma recomendada de instalação é através do [[https://www.haskell.org/ghcup/][GHCup]]. Em seguida execute o seguinte comando.

#+begin_src bash
cabal run
#+end_src

O comando acima compila e executa o programa em Haskell.

** Como funciona
Um compilador é uma ferramento capaz de traduzir o código de uma linguagem de programação para outra linguagem. Esse compilador converte um código na linguagem C para o correspondente na linguagem Python.

A compilação possui 6 etapas:
1. Análise Lexica
2. Análise Sintática
3. Análise Semântica
4. Geração de Código Intermediário
5. Otimização do Código
6. Geração do Código Final

Atualmente este compilador está na sua quarta e última etapa (Geração de código Python)

** Arquivos de testes
A pasta *1* possui 10 códigos C para serem testados no compilador.  O resultado e o motivo das análise para cada arquivo são:
- Código_01.c
  - não foram encontrador erros sintáticos ou semânticos
    #+begin_src 
    "Analise Sintatica: True"
    "Analise Semantica: True"
    #+end_src
- Código_02.c
  - o gcc apresenta o seguinte warning:
    #+begin_src 
    Código_02.c: In function ‘main’:
    Código_02.c:8:7: warning: assignment to ‘int’ from ‘char *’ makes integer from pointer without a cast [-Wint-conversion]
        8 |     b = c + "casa";
    #+end_src
  - O analisador semântico trata isso como um erro semântico, já que não é possível realizar operações com tipos diferentes nem com string,
- Código_03.c
  - o gcc apresenta o seguinte warning:
    #+begin_src 
    Código_03.c: In function ‘main’:
    Código_03.c:8:7: warning: assignment to ‘int’ from ‘char *’ makes integer from pointer without a cast [-Wint-conversion]
        8 |     b = "casa";
        |       ^
    #+end_src
  - O analisador semântico do compilador trata isso como um erro semântico, já que não é possível atribuir à uma variável um conteúdo de tipo diferente do seu tipo declarado.
- Código_04.c
  - o gcc apresenta os seguintes erros e warnings
    #+begin_src 
    Código_04.c: In function ‘main’:
    Código_04.c:9:15: warning: variable ‘y’ set but not used [-Wunused-but-set-variable]
        9 |         float y;
        |               ^
    Código_04.c:12:13: error: ‘i’ undeclared (first use in this function)
        12 |     b = c + i * a - y;
        |             ^
    Código_04.c:12:13: note: each undeclared identifier is reported only once for each function it appears in
    Código_04.c:12:21: error: ‘y’ undeclared (first use in this function)
        12 |     b = c + i * a - y;
    #+end_src
  - O anaalisador semântico do compilador trata isso como um erro semântico, já que não é possível atribuir um valor à uma variável que ainda não foi declarada.
- Código_05.c
  - o gcc apresenta os seguintes erros e warnings
    #+begin_src 
    Código_05.c: In function ‘main’:
    Código_05.c:19:10: error: invalid operands to binary % (have ‘float’ and ‘float’)
    19 |     b = a%b;
        |          ^
    Código_05.c:20:13: warning: multi-character character constant [-Wmultichar]
    20 |     c = b + 'casa' + 'bola';
        |             ^~~~~~
    Código_05.c:20:22: warning: multi-character character constant [-Wmultichar]
    20 |     c = b + 'casa' + 'bola';
        |                      ^~~~~~
    Código_05.c:17:29: warning: unused variable ‘e’ [-Wunused-variable]
    17 |     float a=10,b=5,c=7,d=11,e=15;
        |                             ^
    Código_05.c:17:24: warning: unused variable ‘d’ [-Wunused-variable]
    17 |     float a=10,b=5,c=7,d=11,e=15;
        |                        ^
    Código_05.c:17:20: warning: variable ‘c’ set but not used [-Wunused-but-set-variable]
    17 |     float a=10,b=5,c=7,d=11,e=15;
        |                    ^    
    #+end_src
  - O analisador sintático trata o 'casa' como erro sintático e finaliza a análise.
- Código_06.c
  - o gcc apresenta os seguintes erros e warnings
    #+begin_src 
    Código_06.c: In function ‘main’:
    Código_06.c:7:10: warning: division by zero [-Wdiv-by-zero]
        7 |     b = 0/0;
        |          ^
    Código_06.c:5:25: warning: unused variable ‘e’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                         ^
    Código_06.c:5:21: warning: unused variable ‘d’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                     ^
    Código_06.c:5:17: warning: unused variable ‘c’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                 ^
    Código_06.c:5:13: warning: variable ‘b’ set but not used [-Wunused-but-set-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |             ^
    Código_06.c:5:9: warning: unused variable ‘a’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
    #+end_src
  - Nenhum erro é capturado por que a divisão por 0 é um erro lógico;
- Código_07.c
  - o gcc apresenta os seguintes erros e warnings
    #+begin_src 
    Código_07.c: In function ‘main’:
    Código_07.c:7:5: error: ‘f’ undeclared (first use in this function)
        7 |     f = a/b;
        |     ^
    Código_07.c:7:5: note: each undeclared identifier is reported only once for each function it appears in
    Código_07.c:5:25: warning: unused variable ‘e’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                         ^
    Código_07.c:5:21: warning: unused variable ‘d’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                     ^
    Código_07.c:5:17: warning: unused variable ‘c’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
    #+end_src
  - O analisador semântico do compilador trata isso como um erro semântico, já que não é possível atribuir um valor à uma variável que ainda não foi declarada.
- Código_08.c
  - o gcc apresenta os seguintes erros e warnings
    #+begin_src 
    Código_08.c: In function ‘main’:
    Código_08.c:7:16: error: invalid operands to binary + (have ‘char *’ and ‘char *’)
        7 |     a = "dois" + "tres";
        |         ~~~~~~ ^
        |         |      |
        |         char * char *
    Código_08.c:5:25: warning: unused variable ‘e’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                         ^
    Código_08.c:5:21: warning: unused variable ‘d’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                     ^
    Código_08.c:5:17: warning: unused variable ‘c’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                 ^
    Código_08.c:5:13: warning: unused variable ‘b’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |             ^
    Código_08.c:5:9: warning: variable ‘a’ set but not used [-Wunused-but-set-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |         ^
    #+end_src
  - O analisador semântico do compilador trata isso como um erro semântico, já que a variável *a* é do tipo inteiro e *"dois"* e *"tres"* são ponteiros para char, isso é, são de tipos diferentes.
- Código_09.c
  - o gcc apresenta o seguinte warning:
    #+begin_src 
    Código_09.c: In function ‘main’:
    Código_09.c:7:29: warning: right-hand operand of comma expression has no effect [-Wunused-value]
        7 |     a = 5.6 + 1.7 - 2.75 * 1,23 / 7.97;
        |                             ^
    Código_09.c:5:25: warning: unused variable ‘e’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                         ^
    Código_09.c:5:21: warning: unused variable ‘d’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                     ^
    Código_09.c:5:17: warning: unused variable ‘c’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                 ^
    Código_09.c:5:13: warning: unused variable ‘b’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |             ^
    Código_09.c:5:9: warning: variable ‘a’ set but not used [-Wunused-but-set-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
    #+end_src
  - O analisador sintático do compilador trata isso como um erro sintático, já que a *1,23* não é uma senteçao válida
- Código_10.c
  - o gcc apresenta os seguintes erros e warnings
    #+begin_src 
    Código_10.c: In function ‘main’:
    Código_10.c:7:16: error: invalid operands to binary / (have ‘char *’ and ‘char *’)
        7 |     a = "zero" / "zero";
        |         ~~~~~~ ^
        |         |      |
        |         char * char *
    Código_10.c:5:25: warning: unused variable ‘e’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                         ^
    Código_10.c:5:21: warning: unused variable ‘d’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                     ^
    Código_10.c:5:17: warning: unused variable ‘c’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |                 ^
    Código_10.c:5:13: warning: unused variable ‘b’ [-Wunused-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;
        |             ^
    Código_10.c:5:9: warning: variable ‘a’ set but not used [-Wunused-but-set-variable]
        5 |     int a=0,b=0,c=0,d=0,e=0;

    #+end_src
  - O analisador semântico do compilador trata isso como um erro semântico, já que a variável *a* é do tipo inteiro e *"dois"* e *"tres"* são ponteiros para char
